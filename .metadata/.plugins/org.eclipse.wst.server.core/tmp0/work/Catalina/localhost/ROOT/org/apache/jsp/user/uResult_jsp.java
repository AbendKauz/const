/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-12-26 10:14:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import utils.JSFunction;

public final class uResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("utils.JSFunction");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>회원가입완료</title>\r\n");
      out.write("<!-- style -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("   href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n");
      out.write("   integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n");
      out.write("   crossorigin=\"anonymous\">\r\n");
      out.write("<style>\r\n");
      out.write("	.box{\r\n");
      out.write("		background-color: white;\r\n");
      out.write("	   width:800px;\r\n");
      out.write("	   height:500px;      \r\n");
      out.write("	   margin:0 auto;\r\n");
      out.write("	   opacity: 0.75;\r\n");
      out.write("	   border-top-left-radius:20px;\r\n");
      out.write("	   border-radius:5px;\r\n");
      out.write("	   margin-top:10px;\r\n");
      out.write("	   position: relative;\r\n");
      out.write("	}\r\n");
      out.write("	.p1{\r\n");
      out.write("	   text-align:center;\r\n");
      out.write("	   font-size:20px;\r\n");
      out.write("	   padding-top:60px;\r\n");
      out.write("	   color:gray;\r\n");
      out.write("	   opacity: 0.8;\r\n");
      out.write("	}\r\n");
      out.write("	.p2{\r\n");
      out.write("	   padding-top:70px;\r\n");
      out.write("	   margin-left: 120px;\r\n");
      out.write("	}\r\n");
      out.write("	.p3{\r\n");
      out.write("	   padding-top:20px;\r\n");
      out.write("	   margin-bottom: 55px;\r\n");
      out.write("	}\r\n");
      out.write("	.p4{\r\n");
      out.write("	   border: 1px solid purple;\r\n");
      out.write("	   border-radius: 5px;\r\n");
      out.write("	   margin-bottom: 70px\r\n");
      out.write("	}\r\n");
      out.write("	.p5{\r\n");
      out.write("	   font-size: 18px;\r\n");
      out.write("	   text-align: center;\r\n");
      out.write("	   padding-top:60px;\r\n");
      out.write("	   padding-bottom:70px;\r\n");
      out.write("	   border-radius: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	.s1{\r\n");
      out.write("	   margin-left: 130px;\r\n");
      out.write("	   color:#25a4cd;\r\n");
      out.write("	}\r\n");
      out.write("	.s2{\r\n");
      out.write("	   font-size: 18px;\r\n");
      out.write("	   opacity: 0.75;\r\n");
      out.write("	   display: flex;\r\n");
      out.write("	   justify-content: center;\r\n");
      out.write("	\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.sm3{\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		font-size: 50px;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#pref{\r\n");
      out.write("		border: none;\r\n");
      out.write("		color:#800080;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	#pref:focus {outline: none;} /* outline 테두리 없애기 */\r\n");
      out.write("	.Ca_button{\r\n");
      out.write("	   color:gray;\r\n");
      out.write("	   width:146px;\r\n");
      out.write("	   height:45px;\r\n");
      out.write("	   background-color:gray;\r\n");
      out.write("	   border: 1px solid gray;\r\n");
      out.write("	   background-color: transparent;\r\n");
      out.write("	   border-radius: 5px;\r\n");
      out.write("	   font-size: 20px;\r\n");
      out.write("	   margin-top: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	.Ca_button:hover{\r\n");
      out.write("	   background-color: #fff;\r\n");
      out.write("	   opacity: 0.7;\r\n");
      out.write("	   color:#6f42c1;\r\n");
      out.write("	}\r\n");
      out.write("	hr{\r\n");
      out.write("		margin: 100px auto;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- script -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"../resources/js/user.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	//XMLHttpRequest 객체 생성(XMLHttpRequest : 자바스크립트의 내장객체, 비동기통신을 위한 객체)\r\n");
      out.write("	let xhr = new XMLHttpRequest();\r\n");
      out.write("	\r\n");
      out.write("	//요청을 보낼 방식, url, 비동기여부 설정\r\n");
      out.write("	xhr.open('GET', 'http://localhost:5000/predict?uid=");
      out.print(request.getParameter("category"));
      out.write("&area=");
      out.print(request.getParameter("area"));
      out.write("&level=");
      out.print(request.getParameter("level"));
      out.write("&length=");
      out.print(Double.parseDouble(request.getParameter("length")));
      out.write("&time=");
      out.print(Integer.parseInt(request.getParameter("time")));
      out.write("&water=");
      out.print(request.getParameter("drink"));
      out.write("&toilet=");
      out.print(request.getParameter("toilet"));
      out.write("&mart=");
      out.print(request.getParameter("mart"));
      out.write("&keywork=");
      out.print(request.getParameter("keyword"));
      out.write("', true);\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("	//요청 전송\r\n");
      out.write("	xhr.send();\r\n");
      out.write("	\r\n");
      out.write("	//Callback\r\n");
      out.write("	xhr.onload = () => {\r\n");
      out.write("		let pref = document.getElementById(\"pref\");\r\n");
      out.write("	    if (xhr.status == 200) {\r\n");
      out.write("	    	//success\r\n");
      out.write("	        console.log(xhr.response);\r\n");
      out.write("	        pref.value = xhr.response;\r\n");
      out.write("	        \r\n");
      out.write("	        // 취향 결과의 카테고리 처리\r\n");
      out.write("	        let chk = new XMLHttpRequest();\r\n");
      out.write("	        \r\n");
      out.write("	        // 요청을 보낼 방식, url, 비동기여부 설정\r\n");
      out.write("	        chk.open('GET', '/chkCourse.us?cours='+ xhr.response, true);\r\n");
      out.write("	        // 요청 전송\r\n");
      out.write("	        chk.send();\r\n");
      out.write("	        \r\n");
      out.write("	        // Callback\r\n");
      out.write("	        chk.onload = () => {\r\n");
      out.write("	        	let ckco = document.getElementById(\"chk\");\r\n");
      out.write("	        	if(chk.status == 200){\r\n");
      out.write("	        		console.log(\"결과 : \" + chk.response);\r\n");
      out.write("	        		ckco.value = chk.response;\r\n");
      out.write("	        	}else{\r\n");
      out.write("	        		// failed\r\n");
      out.write("	        	}\r\n");
      out.write("	        }\r\n");
      out.write("	        \r\n");
      out.write("	        \r\n");
      out.write("	    } else {\r\n");
      out.write("	        //failed\r\n");
      out.write("	    }\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function submit2(frm){\r\n");
      out.write("		frm.action = \"/cDetail.us\";\r\n");
      out.write("		frm.submit();\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/header_result.jsp", out, false);
      out.write("\r\n");
      out.write("   <div class=\"container\">\r\n");
      out.write("   		<form id=\"frm\" name=\"frm\" action=\"/addPref.us\" method=\"post\">\r\n");
      out.write("   			<input type=\"hidden\" id=\"id\" name=\"id\" value=\"");
      out.print( request.getParameter("id") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"category\" name=\"category\" value=\"");
      out.print( request.getParameter("category") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"area\" name=\"area\" value=\"");
      out.print( request.getParameter("area") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"level\" name=\"level\" value=\"");
      out.print( request.getParameter("level") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"length\" name=\"length\" value=\"");
      out.print( request.getParameter("length") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"time\" name=\"time\" value=\"");
      out.print( request.getParameter("time") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"drink\" name=\"drink\" value=\"");
      out.print( request.getParameter("drink") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"toilet\" name=\"toilet\" value=\"");
      out.print( request.getParameter("toilet") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"mart\" name=\"mart\" value=\"");
      out.print( request.getParameter("mart") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"keyword\" name=\"keyword\" value=\"");
      out.print( request.getParameter("keyword") );
      out.write("\">\r\n");
      out.write("	      <p class=\"p1\">회원가입 완료</p>\r\n");
      out.write("	      <div class=\"box\">\r\n");
      out.write("	      <hr>\r\n");
      out.write("			<p class=\"p2\"><span class=\"s1\">나만의 취향 코스</span>가 완성되었습니다</p>\r\n");
      out.write("			<p class=\"p3\"><span class=\"s2\">건강해지는 발걸음</span></p>\r\n");
      out.write("			<p class=\"p4\">\r\n");
      out.write("				<span class=\"sm3\">\r\n");
      out.write("			 		<input type=\"text\" id=\"pref\" name=\"pref\" readonly>\r\n");
      out.write("				</span>\r\n");
      out.write("			</p>\r\n");
      out.write("			<hr>\r\n");
      out.write("			<div style=\"text-align: center\">\r\n");
      out.write("			 	<button type=\"button\" class=\"Ca_button\" onclick=\"return submit2(this.form)\">코스 상세보기</button>\r\n");
      out.write("			</div>\r\n");
      out.write("	      </div>\r\n");
      out.write("      </form>\r\n");
      out.write("   </div>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
